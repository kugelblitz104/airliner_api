openapi: 3.0.3
info:
  title: Airliner API
  version: 1.0.0
  description: API for Airliner project
paths:
  /api/addresses/:
    get:
      operationId: addresses_list
      description: API endpoint that allows addresses to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - addresses
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAddressList'
          description: ''
    post:
      operationId: addresses_create
      description: API endpoint that allows addresses to be viewed or edited.
      tags:
      - addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddressRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddressRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/addresses/{id}/:
    get:
      operationId: addresses_retrieve
      description: API endpoint that allows addresses to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - addresses
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    put:
      operationId: addresses_update
      description: API endpoint that allows addresses to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddressRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddressRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    patch:
      operationId: addresses_partial_update
      description: API endpoint that allows addresses to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddressRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddressRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddressRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    delete:
      operationId: addresses_destroy
      description: API endpoint that allows addresses to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - addresses
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/airlines/:
    get:
      operationId: airlines_list
      description: API endpoint that allows airlines to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - airlines
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAirlineList'
          description: ''
    post:
      operationId: airlines_create
      description: API endpoint that allows airlines to be viewed or edited.
      tags:
      - airlines
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AirlineRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AirlineRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AirlineRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airline'
          description: ''
  /api/airlines/{id}/:
    get:
      operationId: airlines_retrieve
      description: API endpoint that allows airlines to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airline.
        required: true
      tags:
      - airlines
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airline'
          description: ''
    put:
      operationId: airlines_update
      description: API endpoint that allows airlines to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airline.
        required: true
      tags:
      - airlines
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AirlineRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AirlineRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AirlineRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airline'
          description: ''
    patch:
      operationId: airlines_partial_update
      description: API endpoint that allows airlines to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airline.
        required: true
      tags:
      - airlines
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAirlineRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAirlineRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAirlineRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airline'
          description: ''
    delete:
      operationId: airlines_destroy
      description: API endpoint that allows airlines to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airline.
        required: true
      tags:
      - airlines
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/airports/:
    get:
      operationId: airports_list
      description: API endpoint that allows airports to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - airports
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAirportList'
          description: ''
    post:
      operationId: airports_create
      description: API endpoint that allows airports to be viewed or edited.
      tags:
      - airports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AirportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AirportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AirportRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airport'
          description: ''
  /api/airports/{id}/:
    get:
      operationId: airports_retrieve
      description: API endpoint that allows airports to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airport.
        required: true
      tags:
      - airports
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airport'
          description: ''
    put:
      operationId: airports_update
      description: API endpoint that allows airports to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airport.
        required: true
      tags:
      - airports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AirportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AirportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AirportRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airport'
          description: ''
    patch:
      operationId: airports_partial_update
      description: API endpoint that allows airports to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airport.
        required: true
      tags:
      - airports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAirportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAirportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAirportRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airport'
          description: ''
    delete:
      operationId: airports_destroy
      description: API endpoint that allows airports to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airport.
        required: true
      tags:
      - airports
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/bookings/:
    get:
      operationId: bookings_list
      description: API endpoint that allows bookings to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - bookings
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookingList'
          description: ''
    post:
      operationId: bookings_create
      description: API endpoint that allows bookings to be viewed or edited.
      tags:
      - bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookingRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
  /api/bookings/{id}/:
    get:
      operationId: bookings_retrieve
      description: API endpoint that allows bookings to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - bookings
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
    put:
      operationId: bookings_update
      description: API endpoint that allows bookings to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookingRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
    patch:
      operationId: bookings_partial_update
      description: API endpoint that allows bookings to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBookingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBookingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBookingRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
    delete:
      operationId: bookings_destroy
      description: API endpoint that allows bookings to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - bookings
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/contacts/:
    get:
      operationId: contacts_list
      description: API endpoint that allows contacts to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - contacts
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContactList'
          description: ''
    post:
      operationId: contacts_create
      description: API endpoint that allows contacts to be viewed or edited.
      tags:
      - contacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
  /api/contacts/{id}/:
    get:
      operationId: contacts_retrieve
      description: API endpoint that allows contacts to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact.
        required: true
      tags:
      - contacts
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    put:
      operationId: contacts_update
      description: API endpoint that allows contacts to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact.
        required: true
      tags:
      - contacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    patch:
      operationId: contacts_partial_update
      description: API endpoint that allows contacts to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact.
        required: true
      tags:
      - contacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContactRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContactRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContactRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    delete:
      operationId: contacts_destroy
      description: API endpoint that allows contacts to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact.
        required: true
      tags:
      - contacts
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/countries/:
    get:
      operationId: countries_list
      description: API endpoint that allows countries to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - countries
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCountryList'
          description: ''
    post:
      operationId: countries_create
      description: API endpoint that allows countries to be viewed or edited.
      tags:
      - countries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CountryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CountryRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /api/countries/{id}/:
    get:
      operationId: countries_retrieve
      description: API endpoint that allows countries to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country.
        required: true
      tags:
      - countries
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    put:
      operationId: countries_update
      description: API endpoint that allows countries to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country.
        required: true
      tags:
      - countries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CountryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CountryRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    patch:
      operationId: countries_partial_update
      description: API endpoint that allows countries to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country.
        required: true
      tags:
      - countries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCountryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCountryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCountryRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    delete:
      operationId: countries_destroy
      description: API endpoint that allows countries to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country.
        required: true
      tags:
      - countries
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/crew/:
    get:
      operationId: crew_list
      description: API endpoint that allows crews to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - crew
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCrewList'
          description: ''
    post:
      operationId: crew_create
      description: API endpoint that allows crews to be viewed or edited.
      tags:
      - crew
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CrewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CrewRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crew'
          description: ''
  /api/crew/{id}/:
    get:
      operationId: crew_retrieve
      description: API endpoint that allows crews to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this crew.
        required: true
      tags:
      - crew
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crew'
          description: ''
    put:
      operationId: crew_update
      description: API endpoint that allows crews to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this crew.
        required: true
      tags:
      - crew
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CrewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CrewRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crew'
          description: ''
    patch:
      operationId: crew_partial_update
      description: API endpoint that allows crews to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this crew.
        required: true
      tags:
      - crew
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCrewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCrewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCrewRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crew'
          description: ''
    delete:
      operationId: crew_destroy
      description: API endpoint that allows crews to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this crew.
        required: true
      tags:
      - crew
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/customers/:
    get:
      operationId: customers_list
      description: API endpoint that allows customers to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - customers
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerList'
          description: ''
    post:
      operationId: customers_create
      description: API endpoint that allows customers to be viewed or edited.
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /api/customers/{id}/:
    get:
      operationId: customers_retrieve
      description: API endpoint that allows customers to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - customers
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    put:
      operationId: customers_update
      description: API endpoint that allows customers to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: customers_partial_update
      description: API endpoint that allows customers to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    delete:
      operationId: customers_destroy
      description: API endpoint that allows customers to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - customers
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/employees/:
    get:
      operationId: employees_list
      description: API endpoint that allows employees to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - employees
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmployeeList'
          description: ''
    post:
      operationId: employees_create
      description: API endpoint that allows employees to be viewed or edited.
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
  /api/employees/{id}/:
    get:
      operationId: employees_retrieve
      description: API endpoint that allows employees to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - employees
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    put:
      operationId: employees_update
      description: API endpoint that allows employees to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    patch:
      operationId: employees_partial_update
      description: API endpoint that allows employees to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    delete:
      operationId: employees_destroy
      description: API endpoint that allows employees to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - employees
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/flights/:
    get:
      operationId: flights_list
      description: API endpoint that allows flights to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - flights
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFlightList'
          description: ''
    post:
      operationId: flights_create
      description: API endpoint that allows flights to be viewed or edited.
      tags:
      - flights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlightRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlightRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
          description: ''
  /api/flights/{id}/:
    get:
      operationId: flights_retrieve
      description: API endpoint that allows flights to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flight.
        required: true
      tags:
      - flights
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
          description: ''
    put:
      operationId: flights_update
      description: API endpoint that allows flights to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flight.
        required: true
      tags:
      - flights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlightRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlightRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
          description: ''
    patch:
      operationId: flights_partial_update
      description: API endpoint that allows flights to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flight.
        required: true
      tags:
      - flights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFlightRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFlightRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFlightRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
          description: ''
    delete:
      operationId: flights_destroy
      description: API endpoint that allows flights to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flight.
        required: true
      tags:
      - flights
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/groups/:
    get:
      operationId: groups_list
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - groups
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ''
    post:
      operationId: groups_create
      description: API endpoint that allows groups to be viewed or edited.
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/groups/{id}/:
    get:
      operationId: groups_retrieve
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: groups_update
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    patch:
      operationId: groups_partial_update
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    delete:
      operationId: groups_destroy
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/planemodels/:
    get:
      operationId: planemodels_list
      description: API endpoint that allows plane models to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - planemodels
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlaneModelList'
          description: ''
    post:
      operationId: planemodels_create
      description: API endpoint that allows plane models to be viewed or edited.
      tags:
      - planemodels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaneModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlaneModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlaneModelRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaneModel'
          description: ''
  /api/planemodels/{id}/:
    get:
      operationId: planemodels_retrieve
      description: API endpoint that allows plane models to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plane model.
        required: true
      tags:
      - planemodels
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaneModel'
          description: ''
    put:
      operationId: planemodels_update
      description: API endpoint that allows plane models to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plane model.
        required: true
      tags:
      - planemodels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaneModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlaneModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlaneModelRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaneModel'
          description: ''
    patch:
      operationId: planemodels_partial_update
      description: API endpoint that allows plane models to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plane model.
        required: true
      tags:
      - planemodels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlaneModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlaneModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlaneModelRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaneModel'
          description: ''
    delete:
      operationId: planemodels_destroy
      description: API endpoint that allows plane models to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plane model.
        required: true
      tags:
      - planemodels
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/planes/:
    get:
      operationId: planes_list
      description: API endpoint that allows planes to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - planes
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlaneList'
          description: ''
    post:
      operationId: planes_create
      description: API endpoint that allows planes to be viewed or edited.
      tags:
      - planes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaneRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlaneRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlaneRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plane'
          description: ''
  /api/planes/{id}/:
    get:
      operationId: planes_retrieve
      description: API endpoint that allows planes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plane.
        required: true
      tags:
      - planes
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plane'
          description: ''
    put:
      operationId: planes_update
      description: API endpoint that allows planes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plane.
        required: true
      tags:
      - planes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaneRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlaneRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlaneRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plane'
          description: ''
    patch:
      operationId: planes_partial_update
      description: API endpoint that allows planes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plane.
        required: true
      tags:
      - planes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlaneRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlaneRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlaneRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plane'
          description: ''
    delete:
      operationId: planes_destroy
      description: API endpoint that allows planes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plane.
        required: true
      tags:
      - planes
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/seats/:
    get:
      operationId: seats_list
      description: API endpoint that allows seats to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - seats
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSeatList'
          description: ''
    post:
      operationId: seats_create
      description: API endpoint that allows seats to be viewed or edited.
      tags:
      - seats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeatRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SeatRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SeatRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seat'
          description: ''
  /api/seats/{id}/:
    get:
      operationId: seats_retrieve
      description: API endpoint that allows seats to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this seat.
        required: true
      tags:
      - seats
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seat'
          description: ''
    put:
      operationId: seats_update
      description: API endpoint that allows seats to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this seat.
        required: true
      tags:
      - seats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeatRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SeatRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SeatRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seat'
          description: ''
    patch:
      operationId: seats_partial_update
      description: API endpoint that allows seats to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this seat.
        required: true
      tags:
      - seats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSeatRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSeatRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSeatRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seat'
          description: ''
    delete:
      operationId: seats_destroy
      description: API endpoint that allows seats to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this seat.
        required: true
      tags:
      - seats
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/seattype/:
    get:
      operationId: seattype_list
      description: API endpoint that allows seat types to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - seattype
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSeatTypeList'
          description: ''
    post:
      operationId: seattype_create
      description: API endpoint that allows seat types to be viewed or edited.
      tags:
      - seattype
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeatTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SeatTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SeatTypeRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatType'
          description: ''
  /api/seattype/{id}/:
    get:
      operationId: seattype_retrieve
      description: API endpoint that allows seat types to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this seat type.
        required: true
      tags:
      - seattype
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatType'
          description: ''
    put:
      operationId: seattype_update
      description: API endpoint that allows seat types to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this seat type.
        required: true
      tags:
      - seattype
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeatTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SeatTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SeatTypeRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatType'
          description: ''
    patch:
      operationId: seattype_partial_update
      description: API endpoint that allows seat types to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this seat type.
        required: true
      tags:
      - seattype
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSeatTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSeatTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSeatTypeRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatType'
          description: ''
    delete:
      operationId: seattype_destroy
      description: API endpoint that allows seat types to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this seat type.
        required: true
      tags:
      - seattype
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/tickets/:
    get:
      operationId: tickets_list
      description: API endpoint that allows tickets to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - tickets
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTicketList'
          description: ''
    post:
      operationId: tickets_create
      description: API endpoint that allows tickets to be viewed or edited.
      tags:
      - tickets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TicketRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TicketRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
  /api/tickets/{id}/:
    get:
      operationId: tickets_retrieve
      description: API endpoint that allows tickets to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ticket.
        required: true
      tags:
      - tickets
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    put:
      operationId: tickets_update
      description: API endpoint that allows tickets to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ticket.
        required: true
      tags:
      - tickets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TicketRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TicketRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    patch:
      operationId: tickets_partial_update
      description: API endpoint that allows tickets to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ticket.
        required: true
      tags:
      - tickets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTicketRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTicketRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTicketRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    delete:
      operationId: tickets_destroy
      description: API endpoint that allows tickets to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ticket.
        required: true
      tags:
      - tickets
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        street_num:
          type: string
          nullable: true
          maxLength: 10
        street_name:
          type: string
          maxLength: 100
        city:
          type: string
          maxLength: 50
        state:
          type: string
          maxLength: 50
        zip_code:
          type: string
          nullable: true
          maxLength: 10
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        country:
          type: integer
          nullable: true
      required:
      - city
      - created_at
      - id
      - state
      - street_name
      - updated_at
    AddressRequest:
      type: object
      properties:
        street_num:
          type: string
          nullable: true
          maxLength: 10
        street_name:
          type: string
          minLength: 1
          maxLength: 100
        city:
          type: string
          minLength: 1
          maxLength: 50
        state:
          type: string
          minLength: 1
          maxLength: 50
        zip_code:
          type: string
          nullable: true
          maxLength: 10
        country:
          type: integer
          nullable: true
      required:
      - city
      - state
      - street_name
    Airline:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        code:
          type: string
          maxLength: 3
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        country:
          type: integer
          nullable: true
      required:
      - code
      - created_at
      - id
      - name
      - updated_at
    AirlineRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        code:
          type: string
          minLength: 1
          maxLength: 3
        country:
          type: integer
          nullable: true
      required:
      - code
      - name
    Airport:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        code:
          type: string
          maxLength: 3
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        address:
          type: integer
          nullable: true
      required:
      - code
      - created_at
      - id
      - name
      - updated_at
    AirportRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        code:
          type: string
          minLength: 1
          maxLength: 3
        address:
          type: integer
          nullable: true
      required:
      - code
      - name
    Booking:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        booking_date:
          type: string
          format: date-time
          readOnly: true
        confirmation_number:
          type: string
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        customer:
          type: integer
      required:
      - booking_date
      - confirmation_number
      - created_at
      - customer
      - id
      - updated_at
    BookingRequest:
      type: object
      properties:
        confirmation_number:
          type: string
          minLength: 1
          maxLength: 20
        customer:
          type: integer
      required:
      - confirmation_number
      - customer
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          nullable: true
          maxLength: 100
        last_name:
          type: string
          nullable: true
          maxLength: 100
        dob:
          type: string
          format: date
          nullable: true
        phone_number:
          type: string
          nullable: true
          maxLength: 15
        email:
          type: string
          format: email
          nullable: true
          maxLength: 100
        gender:
          type: string
          nullable: true
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        address:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - updated_at
    ContactRequest:
      type: object
      properties:
        first_name:
          type: string
          nullable: true
          maxLength: 100
        last_name:
          type: string
          nullable: true
          maxLength: 100
        dob:
          type: string
          format: date
          nullable: true
        phone_number:
          type: string
          nullable: true
          maxLength: 15
        email:
          type: string
          format: email
          nullable: true
          maxLength: 100
        gender:
          type: string
          nullable: true
          maxLength: 20
        address:
          type: integer
          nullable: true
    Country:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          maxLength: 3
        name:
          type: string
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - code
      - created_at
      - id
      - name
      - updated_at
    CountryRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
          maxLength: 3
        name:
          type: string
          minLength: 1
          maxLength: 50
      required:
      - code
      - name
    Crew:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        role:
          type: string
          nullable: true
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        flight:
          type: integer
        employee:
          type: integer
      required:
      - created_at
      - employee
      - flight
      - id
      - updated_at
    CrewRequest:
      type: object
      properties:
        role:
          type: string
          nullable: true
          maxLength: 50
        flight:
          type: integer
        employee:
          type: integer
      required:
      - employee
      - flight
    Customer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        frequent_flyer_number:
          type: string
          nullable: true
          maxLength: 20
        loyalty_program:
          type: string
          nullable: true
          maxLength: 50
        accomodations:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        contact:
          type: integer
      required:
      - contact
      - created_at
      - id
      - updated_at
    CustomerRequest:
      type: object
      properties:
        frequent_flyer_number:
          type: string
          nullable: true
          maxLength: 20
        loyalty_program:
          type: string
          nullable: true
          maxLength: 50
        accomodations:
          type: string
          nullable: true
        contact:
          type: integer
      required:
      - contact
    Employee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        employee_type:
          $ref: '#/components/schemas/EmployeeTypeEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        contact:
          type: integer
        airline:
          type: integer
          nullable: true
      required:
      - contact
      - created_at
      - id
      - updated_at
    EmployeeRequest:
      type: object
      properties:
        employee_type:
          $ref: '#/components/schemas/EmployeeTypeEnum'
        contact:
          type: integer
        airline:
          type: integer
          nullable: true
      required:
      - contact
    EmployeeTypeEnum:
      enum:
      - pilot
      - flight_attendant
      - ground_staff
      - maintenance
      type: string
      description: |-
        * `pilot` - Pilot
        * `flight_attendant` - Flight Attendant
        * `ground_staff` - Ground Staff
        * `maintenance` - Maintenance
    Flight:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        flight_number:
          type: string
          maxLength: 8
        departure_time:
          type: string
          format: date-time
          nullable: true
        arrival_time:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/FlightStatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        departure_airport:
          type: integer
        arrival_airport:
          type: integer
        plane:
          type: integer
          nullable: true
      required:
      - arrival_airport
      - created_at
      - departure_airport
      - flight_number
      - id
      - updated_at
    FlightRequest:
      type: object
      properties:
        flight_number:
          type: string
          minLength: 1
          maxLength: 8
        departure_time:
          type: string
          format: date-time
          nullable: true
        arrival_time:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/FlightStatusEnum'
        departure_airport:
          type: integer
        arrival_airport:
          type: integer
        plane:
          type: integer
          nullable: true
      required:
      - arrival_airport
      - departure_airport
      - flight_number
    FlightStatusEnum:
      enum:
      - scheduled
      - delayed
      - cancelled
      - completed
      type: string
      description: |-
        * `scheduled` - Scheduled
        * `delayed` - Delayed
        * `cancelled` - Cancelled
        * `completed` - Completed
    Group:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 150
      required:
      - name
      - url
    GroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 150
      required:
      - name
    PaginatedAddressList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Address'
    PaginatedAirlineList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Airline'
    PaginatedAirportList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Airport'
    PaginatedBookingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Booking'
    PaginatedContactList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
    PaginatedCountryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Country'
    PaginatedCrewList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Crew'
    PaginatedCustomerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
    PaginatedEmployeeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
    PaginatedFlightList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Flight'
    PaginatedGroupList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    PaginatedPlaneList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Plane'
    PaginatedPlaneModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PlaneModel'
    PaginatedSeatList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Seat'
    PaginatedSeatTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SeatType'
    PaginatedTicketList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedAddressRequest:
      type: object
      properties:
        street_num:
          type: string
          nullable: true
          maxLength: 10
        street_name:
          type: string
          minLength: 1
          maxLength: 100
        city:
          type: string
          minLength: 1
          maxLength: 50
        state:
          type: string
          minLength: 1
          maxLength: 50
        zip_code:
          type: string
          nullable: true
          maxLength: 10
        country:
          type: integer
          nullable: true
    PatchedAirlineRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        code:
          type: string
          minLength: 1
          maxLength: 3
        country:
          type: integer
          nullable: true
    PatchedAirportRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        code:
          type: string
          minLength: 1
          maxLength: 3
        address:
          type: integer
          nullable: true
    PatchedBookingRequest:
      type: object
      properties:
        confirmation_number:
          type: string
          minLength: 1
          maxLength: 20
        customer:
          type: integer
    PatchedContactRequest:
      type: object
      properties:
        first_name:
          type: string
          nullable: true
          maxLength: 100
        last_name:
          type: string
          nullable: true
          maxLength: 100
        dob:
          type: string
          format: date
          nullable: true
        phone_number:
          type: string
          nullable: true
          maxLength: 15
        email:
          type: string
          format: email
          nullable: true
          maxLength: 100
        gender:
          type: string
          nullable: true
          maxLength: 20
        address:
          type: integer
          nullable: true
    PatchedCountryRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
          maxLength: 3
        name:
          type: string
          minLength: 1
          maxLength: 50
    PatchedCrewRequest:
      type: object
      properties:
        role:
          type: string
          nullable: true
          maxLength: 50
        flight:
          type: integer
        employee:
          type: integer
    PatchedCustomerRequest:
      type: object
      properties:
        frequent_flyer_number:
          type: string
          nullable: true
          maxLength: 20
        loyalty_program:
          type: string
          nullable: true
          maxLength: 50
        accomodations:
          type: string
          nullable: true
        contact:
          type: integer
    PatchedEmployeeRequest:
      type: object
      properties:
        employee_type:
          $ref: '#/components/schemas/EmployeeTypeEnum'
        contact:
          type: integer
        airline:
          type: integer
          nullable: true
    PatchedFlightRequest:
      type: object
      properties:
        flight_number:
          type: string
          minLength: 1
          maxLength: 8
        departure_time:
          type: string
          format: date-time
          nullable: true
        arrival_time:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/FlightStatusEnum'
        departure_airport:
          type: integer
        arrival_airport:
          type: integer
        plane:
          type: integer
          nullable: true
    PatchedGroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 150
    PatchedPlaneModelRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        manufacturer:
          type: string
          minLength: 1
          maxLength: 100
        exits:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        restrooms:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        crew_capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: not including cockpit crew
        cockpit_crew_capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: not including flight attendants
        passenger_capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        range:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: kilometers
        max_speed:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: km/h
        cruising_speed:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: km/h
        fuel_capacity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: liters
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: kg
        weight_capacity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: kg
        length:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: meters
        wingspan:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: meters
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: meters
    PatchedPlaneRequest:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PlaneStatusEnum'
        registration_number:
          type: string
          minLength: 1
          maxLength: 10
        manufacture_date:
          type: string
          format: date
          nullable: true
        last_maintenance_date:
          type: string
          format: date
          nullable: true
        model:
          type: integer
        airline:
          type: integer
          nullable: true
        airport:
          type: integer
          nullable: true
    PatchedSeatRequest:
      type: object
      properties:
        row:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        aisle:
          type: string
          minLength: 1
          maxLength: 3
        plane:
          type: integer
        seat_type:
          type: integer
    PatchedSeatTypeRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeEnum'
        position:
          $ref: '#/components/schemas/PositionEnum'
    PatchedTicketRequest:
      type: object
      properties:
        ticket_number:
          type: string
          minLength: 1
          maxLength: 20
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        flight:
          type: integer
        seat:
          type: integer
        booking:
          type: integer
    PatchedUserRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        groups:
          type: array
          items:
            type: string
            format: uri
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
    Plane:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/PlaneStatusEnum'
        registration_number:
          type: string
          maxLength: 10
        manufacture_date:
          type: string
          format: date
          nullable: true
        last_maintenance_date:
          type: string
          format: date
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        model:
          type: integer
        airline:
          type: integer
          nullable: true
        airport:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - model
      - registration_number
      - updated_at
    PlaneModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        manufacturer:
          type: string
          maxLength: 100
        exits:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        restrooms:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        crew_capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: not including cockpit crew
        cockpit_crew_capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: not including flight attendants
        passenger_capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        range:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: kilometers
        max_speed:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: km/h
        cruising_speed:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: km/h
        fuel_capacity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: liters
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: kg
        weight_capacity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: kg
        length:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: meters
        wingspan:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: meters
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: meters
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - manufacturer
      - name
      - updated_at
    PlaneModelRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        manufacturer:
          type: string
          minLength: 1
          maxLength: 100
        exits:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        restrooms:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        crew_capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: not including cockpit crew
        cockpit_crew_capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: not including flight attendants
        passenger_capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        range:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: kilometers
        max_speed:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: km/h
        cruising_speed:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: km/h
        fuel_capacity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: liters
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: kg
        weight_capacity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: kg
        length:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: meters
        wingspan:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: meters
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,5})?$
          nullable: true
          description: meters
      required:
      - manufacturer
      - name
    PlaneRequest:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PlaneStatusEnum'
        registration_number:
          type: string
          minLength: 1
          maxLength: 10
        manufacture_date:
          type: string
          format: date
          nullable: true
        last_maintenance_date:
          type: string
          format: date
          nullable: true
        model:
          type: integer
        airline:
          type: integer
          nullable: true
        airport:
          type: integer
          nullable: true
      required:
      - model
      - registration_number
    PlaneStatusEnum:
      enum:
      - active
      - inactive
      type: string
      description: |-
        * `active` - Active
        * `inactive` - Inactive
    PositionEnum:
      enum:
      - aisle
      - window
      - middle
      type: string
      description: |-
        * `aisle` - Aisle
        * `window` - Window
        * `middle` - Middle
    Seat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        row:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        aisle:
          type: string
          maxLength: 3
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        plane:
          type: integer
        seat_type:
          type: integer
      required:
      - aisle
      - created_at
      - id
      - plane
      - row
      - seat_type
      - updated_at
    SeatRequest:
      type: object
      properties:
        row:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        aisle:
          type: string
          minLength: 1
          maxLength: 3
        plane:
          type: integer
        seat_type:
          type: integer
      required:
      - aisle
      - plane
      - row
      - seat_type
    SeatType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          $ref: '#/components/schemas/TypeEnum'
        position:
          $ref: '#/components/schemas/PositionEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - updated_at
    SeatTypeRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeEnum'
        position:
          $ref: '#/components/schemas/PositionEnum'
    Ticket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ticket_number:
          type: string
          maxLength: 20
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        flight:
          type: integer
        seat:
          type: integer
        booking:
          type: integer
      required:
      - booking
      - created_at
      - flight
      - id
      - seat
      - ticket_number
      - updated_at
    TicketRequest:
      type: object
      properties:
        ticket_number:
          type: string
          minLength: 1
          maxLength: 20
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        flight:
          type: integer
        seat:
          type: integer
        booking:
          type: integer
      required:
      - booking
      - flight
      - seat
      - ticket_number
    TypeEnum:
      enum:
      - economy
      - business
      - first_class
      type: string
      description: |-
        * `economy` - Economy
        * `business` - Business
        * `first_class` - First Class
    User:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        groups:
          type: array
          items:
            type: string
            format: uri
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
      required:
      - url
      - username
    UserRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        groups:
          type: array
          items:
            type: string
            format: uri
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
      required:
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
